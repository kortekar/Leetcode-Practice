// ZIGZAG conversion
class Solution {
    public String convert(String s, int numRows) {
        int len = s.length();
        if (len <= numRows) { return s; }
        if (numRows == 1) { return s; }
        char[] chArr = s.toCharArray();
        char[] zigzagCharArr = new char[len];
        
        if (numRows == 2) {
            int x = 0;
            int i = 0;
            while (i < len) {
                zigzagCharArr[x++] = chArr[i];
                i += 2;
            }
            i = 1;
            while (i < len) {
                zigzagCharArr[x++] = chArr[i];
                i += 2;
            }
            String zigzagString = new String(zigzagCharArr);
            return zigzagString;
        } else if (numRows >= 3) {
            int i = 0, x = 0, k = 0;
            int inc = 2;
            int leap = (numRows - 1 - k) * 2;
            
            while (i < len) {
                zigzagCharArr[x++] = chArr[i];
                i += leap;
            }
            
            k = 1;
            for (int j = 1; j <= numRows - 2; j++) {
                i = j;
                zigzagCharArr[x++] = chArr[i];
                leap = (numRows - 1 - k) * 2;
                i += leap;
                
                while (i < len) {
                    zigzagCharArr[x++] = chArr[i];
                    i += inc;
                    
                    if (i >= len) {
                        break;
                    }
                    
                    zigzagCharArr[x++] = chArr[i];
                    i += leap;
                }
                
                k += 1;
                inc += 2;
            }
            
            i = numRows - 1;
            leap = (numRows - 1 - 0) * 2;
            while (i < len) {
                zigzagCharArr[x++] = chArr[i];
                i += leap;
            }
            
            String zigzagString = new String(zigzagCharArr);
            return zigzagString;
        }
        
        return s;
    }
}
