class Solution {
    static class Result {
        int tp;
        String ns;

        Result(int tp, String ns) {
            this.tp = tp;
            this.ns = ns;
        }
    }
    public Result points(String s,int n,String cs){
        int tp = 0;
        Stack<Character> st = new Stack<>();
        for (char c : s.toCharArray()) { 
            if (!st.isEmpty() && c == cs.charAt(1) && st.peek() == cs.charAt(0)) {
                st.pop();
                tp += n;
            } else {
                st.push(c);
            }
        }
        StringBuilder ns = new StringBuilder("");
        while(!st.isEmpty()){
            ns.append(st.pop());
        }
        return new Result(tp, ns.reverse().toString()); 
    }
    public int maximumGain(String s, int x, int y) {
        Result res1 ;
        Result res2 ;
        if(x>y){
            res1 = points(s, x, "ab");
            res2 = points(res1.ns, y, "ba");
        }
        else{
            res1 = points(s, y, "ba");
            res2 = points(res1.ns, x, "ab");
        }
        return res1.tp + res2.tp;
    }
}

//  

You are given a string s and two integers x and y. You can perform two types of operations any number of times.

Remove substring "ab" and gain x points.
For example, when removing "ab" from "cabxbae" it becomes "cxbae".
Remove substring "ba" and gain y points.
For example, when removing "ba" from "cabxbae" it becomes "cabxe".
Return the maximum points you can gain after applying the above operations on s.
Example 1:

Input: s = "cdbcbbaaabab", x = 4, y = 5
Output: 19
Explanation:
- Remove the "ba" underlined in "cdbcbbaaabab". Now, s = "cdbcbbaaab" and 5 points are added to the score.
- Remove the "ab" underlined in "cdbcbbaaab". Now, s = "cdbcbbaa" and 4 points are added to the score.
- Remove the "ba" underlined in "cdbcbbaa". Now, s = "cdbcba" and 5 points are added to the score.
- Remove the "ba" underlined in "cdbcba". Now, s = "cdbc" and 5 points are added to the score.
Total score = 5 + 4 + 5 + 5 = 19.
Example 2:

Input: s = "aabbaaxybbaabb", x = 5, y = 4
Output: 20
