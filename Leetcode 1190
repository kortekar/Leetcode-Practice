class Solution {
    public String reverseParentheses(String s) {
        Stack<Character> st = new Stack<>();
        for(char c:s.toCharArray()){
            if(c!=')'){
                st.push(c);
            }
            else{
                 String temp = "";
                while (st.peek() != '(') {
                    temp += st.pop();
                }
                st.pop(); 
                for (char i : temp.toCharArray()) {
                    st.push(i);
                }
            }
        }
        String ans ="";
        while(!st.isEmpty()){
            ans += st.pop();
        }
        return new StringBuilder(ans).reverse().toString();
    }
}

/*
Example 1:

Input: s = "(abcd)"
Output: "dcba"
Example 2:

Input: s = "(u(love)i)"
Output: "iloveu"
Explanation: The substring "love" is reversed first, then the whole string is reversed.
Example 3:

Input: s = "(ed(et(oc))el)"
Output: "leetcode"
Explanation: First, we reverse the substring "oc", then "etco", and finally, the whole string.
*/
