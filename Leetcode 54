class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
    ArrayList<Integer> result = new ArrayList<Integer>();
  
    int top = 0, bottom = matrix.length-1 ;
    int left = 0 , right = matrix[0].length-1;

    while(top <= bottom && left <= right){

        for(int i = left ; i <=right ; i++){

            result.add(matrix[top][i]);
        }
        top++;

        for(int i = top ; i <=bottom ; i++){
          result.add(matrix[i][right]);
        }
        right--;
       
       if(!(top <= bottom && left <= right)){
        break;
       }

        for(int i = right ; i >= left ; i--){

           result.add(matrix[bottom][i]);
        }
         bottom--;

        for(int i = bottom; i >= top ; i--){

           result.add(matrix[i][left]);
        }
         left++;
       }
       return result;
    }
}

// Spiral matrix 

/*

Input: matrix = [[1,2,3,4],[5,6,7,8],[9,10,11,12]]
Output: [1,2,3,4,8,12,11,10,9,5,6,7]

Input: matrix = [[1,2,3],[4,5,6],[7,8,9]]
Output: [1,2,3,6,9,8,7,4,5]

*/
